<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.usdttrading.repository.TransactionMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.usdttrading.entity.WalletTransaction">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="wallet_id" property="walletId" />
        <result column="transaction_number" property="transactionNumber" />
        <result column="type" property="type" />
        <result column="amount" property="amount" />
        <result column="fee" property="fee" />
        <result column="status" property="status" />
        <result column="from_address" property="fromAddress" />
        <result column="to_address" property="toAddress" />
        <result column="transaction_hash" property="transactionHash" />
        <result column="block_number" property="blockNumber" />
        <result column="confirmations" property="confirmations" />
        <result column="memo" property="memo" />
        <result column="error_message" property="errorMessage" />
        <result column="processed_at" property="processedAt" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="deleted" property="deleted" />
        <result column="user_email" property="userEmail" />
        <result column="wallet_address" property="walletAddress" />
    </resultMap>

    <!-- 通用查询SQL片段 -->
    <sql id="selectTransactionWithUserAndWallet">
        SELECT wt.*, 
               u.email as user_email,
               w.address as wallet_address
        FROM wallet_transactions wt 
        LEFT JOIN users u ON wt.user_id = u.id 
        LEFT JOIN wallets w ON wt.wallet_id = w.id
        WHERE wt.deleted = 0
    </sql>

    <!-- 查询条件SQL片段 -->
    <sql id="whereConditions">
        <where>
            <if test="userId != null">
                AND wt.user_id = #{userId}
            </if>
            <if test="walletId != null">
                AND wt.wallet_id = #{walletId}
            </if>
            <if test="transactionNumber != null and transactionNumber != ''">
                AND wt.transaction_number = #{transactionNumber}
            </if>
            <if test="type != null and type != ''">
                AND wt.type = #{type}
            </if>
            <if test="status != null and status != ''">
                AND wt.status = #{status}
            </if>
            <if test="fromAddress != null and fromAddress != ''">
                AND wt.from_address = #{fromAddress}
            </if>
            <if test="toAddress != null and toAddress != ''">
                AND wt.to_address = #{toAddress}
            </if>
            <if test="transactionHash != null and transactionHash != ''">
                AND wt.transaction_hash = #{transactionHash}
            </if>
            <if test="blockNumber != null">
                AND wt.block_number = #{blockNumber}
            </if>
            <if test="minAmount != null">
                AND wt.amount >= #{minAmount}
            </if>
            <if test="maxAmount != null">
                AND wt.amount &lt;= #{maxAmount}
            </if>
            <if test="startTime != null">
                AND wt.created_at >= #{startTime}
            </if>
            <if test="endTime != null">
                AND wt.created_at &lt;= #{endTime}
            </if>
            <if test="minConfirmations != null">
                AND wt.confirmations >= #{minConfirmations}
            </if>
            <if test="maxConfirmations != null">
                AND wt.confirmations &lt;= #{maxConfirmations}
            </if>
        </where>
    </sql>

    <!-- 根据ID查询交易（包含用户和钱包信息） -->
    <select id="selectById" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.id = #{id}
    </select>

    <!-- 分页查询交易列表 -->
    <select id="selectTransactionList" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        <include refid="whereConditions" />
        ORDER BY wt.created_at DESC
    </select>

    <!-- 根据用户ID和时间范围查询交易记录 -->
    <select id="selectByUserIdAndTimeRange" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.user_id = #{userId} 
        AND wt.created_at BETWEEN #{startTime} AND #{endTime}
        ORDER BY wt.created_at DESC
    </select>

    <!-- 根据用户ID和状态查询交易记录 -->
    <select id="selectByUserIdAndStatus" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.user_id = #{userId} 
        AND wt.status = #{status}
        ORDER BY wt.created_at DESC
    </select>

    <!-- 根据交易号查询 -->
    <select id="selectByTransactionNumber" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.transaction_number = #{transactionNumber}
    </select>

    <!-- 根据交易哈希查询 -->
    <select id="selectByTransactionHash" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.transaction_hash = #{transactionHash}
    </select>

    <!-- 查询待处理的交易 -->
    <select id="selectPendingTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.status = 'pending'
        ORDER BY wt.created_at ASC
    </select>

    <!-- 查询失败的交易 -->
    <select id="selectFailedTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.status = 'failed'
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询成功的交易 -->
    <select id="selectSuccessfulTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.status = 'confirmed'
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询大额交易 -->
    <select id="selectLargeTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.amount >= #{minAmount}
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        ORDER BY wt.amount DESC
    </select>

    <!-- 查询指定地址的交易 -->
    <select id="selectByAddress" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND (wt.from_address = #{address} OR wt.to_address = #{address})
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询指定钱包的交易 -->
    <select id="selectByWalletId" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.wallet_id = #{walletId}
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询充值交易 -->
    <select id="selectDepositTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.type = 'deposit'
        <if test="userId != null">
            AND wt.user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND wt.status = #{status}
        </if>
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询提现交易 -->
    <select id="selectWithdrawTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.type = 'withdraw'
        <if test="userId != null">
            AND wt.user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND wt.status = #{status}
        </if>
        ORDER BY wt.created_at DESC
    </select>

    <!-- 查询转账交易 -->
    <select id="selectTransferTransactions" resultMap="BaseResultMap">
        <include refid="selectTransactionWithUserAndWallet" />
        AND wt.type = 'transfer'
        <if test="userId != null">
            AND wt.user_id = #{userId}
        </if>
        <if test="status != null and status != ''">
            AND wt.status = #{status}
        </if>
        ORDER BY wt.created_at DESC
    </select>

    <!-- 更新交易状态 -->
    <update id="updateTransactionStatus">
        UPDATE wallet_transactions 
        SET status = #{status}, 
            error_message = #{errorMessage},
            processed_at = NOW(),
            updated_at = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新交易确认数 -->
    <update id="updateConfirmations">
        UPDATE wallet_transactions 
        SET confirmations = #{confirmations}, 
            block_number = #{blockNumber},
            updated_at = NOW()
        WHERE transaction_hash = #{transactionHash} AND deleted = 0
    </update>

    <!-- 批量更新交易状态 -->
    <update id="batchUpdateStatus">
        UPDATE wallet_transactions 
        SET status = #{status}, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 统计交易数量 -->
    <select id="countTransactions" resultType="java.lang.Long">
        SELECT COUNT(*) 
        FROM wallet_transactions wt
        LEFT JOIN users u ON wt.user_id = u.id
        LEFT JOIN wallets w ON wt.wallet_id = w.id
        WHERE wt.deleted = 0
        <include refid="whereConditions" />
    </select>

    <!-- 统计按类型分组的交易数量 -->
    <select id="countByType" resultType="java.util.Map">
        SELECT wt.type, COUNT(*) as count
        FROM wallet_transactions wt 
        WHERE wt.deleted = 0
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        GROUP BY wt.type
        ORDER BY count DESC
    </select>

    <!-- 统计按状态分组的交易数量 -->
    <select id="countByStatus" resultType="java.util.Map">
        SELECT wt.status, COUNT(*) as count
        FROM wallet_transactions wt 
        WHERE wt.deleted = 0
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        GROUP BY wt.status
        ORDER BY count DESC
    </select>

    <!-- 统计每日交易量 -->
    <select id="countByDate" resultType="java.util.Map">
        SELECT DATE(wt.created_at) as date, 
               COUNT(*) as count,
               SUM(wt.amount) as total_amount
        FROM wallet_transactions wt 
        WHERE wt.deleted = 0
        AND wt.created_at BETWEEN #{startTime} AND #{endTime}
        GROUP BY DATE(wt.created_at)
        ORDER BY date DESC
    </select>

    <!-- 统计交易金额统计 -->
    <select id="getAmountStatistics" resultType="java.util.Map">
        SELECT 
            wt.type,
            COUNT(*) as transaction_count,
            SUM(wt.amount) as total_amount,
            AVG(wt.amount) as avg_amount,
            MIN(wt.amount) as min_amount,
            MAX(wt.amount) as max_amount,
            SUM(wt.fee) as total_fee
        FROM wallet_transactions wt 
        WHERE wt.status = 'confirmed'
        AND wt.deleted = 0
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        GROUP BY wt.type
        ORDER BY total_amount DESC
    </select>

    <!-- 查询用户交易统计 -->
    <select id="getUserTransactionStats" resultType="java.util.Map">
        SELECT 
            u.email,
            COUNT(*) as total_transactions,
            SUM(CASE WHEN wt.type = 'deposit' THEN wt.amount ELSE 0 END) as total_deposits,
            SUM(CASE WHEN wt.type = 'withdraw' THEN wt.amount ELSE 0 END) as total_withdraws,
            COUNT(CASE WHEN wt.type = 'deposit' THEN 1 END) as deposit_count,
            COUNT(CASE WHEN wt.type = 'withdraw' THEN 1 END) as withdraw_count,
            MAX(wt.created_at) as last_transaction_time
        FROM wallet_transactions wt
        JOIN users u ON wt.user_id = u.id
        WHERE wt.status = 'confirmed'
        AND wt.deleted = 0
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        GROUP BY u.id, u.email
        ORDER BY total_transactions DESC
    </select>

    <!-- 查询确认时间统计 -->
    <select id="getConfirmationTimeStats" resultType="java.util.Map">
        SELECT 
            wt.type,
            AVG(TIMESTAMPDIFF(MINUTE, wt.created_at, wt.processed_at)) as avg_confirmation_minutes,
            MIN(TIMESTAMPDIFF(MINUTE, wt.created_at, wt.processed_at)) as min_confirmation_minutes,
            MAX(TIMESTAMPDIFF(MINUTE, wt.created_at, wt.processed_at)) as max_confirmation_minutes,
            COUNT(*) as confirmed_count
        FROM wallet_transactions wt 
        WHERE wt.status = 'confirmed' 
        AND wt.processed_at IS NOT NULL
        AND wt.deleted = 0
        <if test="startTime != null">
            AND wt.created_at >= #{startTime}
        </if>
        <if test="endTime != null">
            AND wt.created_at &lt;= #{endTime}
        </if>
        GROUP BY wt.type
    </select>

    <!-- 批量软删除交易记录 -->
    <update id="batchDelete">
        UPDATE wallet_transactions 
        SET deleted = 1, updated_at = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND deleted = 0
    </update>

    <!-- 清理过期的失败交易记录 -->
    <update id="cleanupFailedTransactions">
        UPDATE wallet_transactions 
        SET deleted = 1, updated_at = NOW()
        WHERE status = 'failed' 
        AND created_at &lt; #{expiredDate}
        AND deleted = 0
    </update>

</mapper>